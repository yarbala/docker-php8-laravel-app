version: "3.5"

networks:
  default:
    external: true
    name: ${APP_NETWORK}

services:

  web-application:
    restart: ${RESTART_POLICY}
    container_name: web-application
    build:
      context: build/php-web
      args:
        - PUID=${PUID}
    tty: true
    environment:
      - VIRTUAL_HOST=${SERVER_NAME}
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
      - TZ=${TZ}
    volumes:
      - "./src:/var/www/html:cached"

  workspace-application:
    restart: ${RESTART_POLICY}
    container_name: workspace-application
    build:
      context: ./build/php-cli
      args:
        - INSTALL_COMPOSER=true
        - PUID=${PUID}
    environment:
      - TZ=${TZ}
      - VIRTUAL_HOST=assets.${SERVER_NAME}
      - VIRTUAL_PORT=80
    tty: true
    depends_on:
      - mysql-application
    volumes:
      - "./src:/var/www/html:cached"
    expose:
      - "80"

  queue-worker-application:
    restart: ${RESTART_POLICY}
    container_name: queue-worker-application
    user: www-data
    build:
      context: ./build/php-cli
      args:
        - PUID=${PUID}
    environment:
      - TZ=${TZ}
    tty: true
    entrypoint: [ "php", "/var/www/html/artisan", "horizon" ]
    volumes:
      - "./src:/var/www/html:cached"

  schedule-application:
    restart: ${RESTART_POLICY}
    container_name: schedule-application
    user: www-data
    build:
      context: ./build/php-cli
      args:
        - PUID=${PUID}
    environment:
      - TZ=${TZ}
    tty: true
    depends_on:
      - workspace-application
    entrypoint: [ "php", "/var/www/html/artisan", "schedule:work" ]
    volumes:
      - "./src:/var/www/html:cached"

  mysql-application:
    restart: ${RESTART_POLICY}
    container_name: mysql-application
    platform: linux/x86_64
    build:
      context: ./build/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes:
      - "./data/mysql:/var/lib/mysql:delegated"

  mailhog-application:
    container_name: mailhog-application
    image: mailhog/mailhog
    environment:
      - VIRTUAL_HOST=mailhog.${SERVER_NAME}
      - VIRTUAL_PORT=8025
      - HTTPS_METHOD=noredirect

  redis-application:
    container_name: redis-application
    build:
      context: ./build/redis
    volumes:
      - "./data/redis:/data:delegated"

  pma-application:
    build:
      context: ./build/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql-application
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - VIRTUAL_HOST=pma.${SERVER_NAME}
      - HTTPS_METHOD=noredirect
    depends_on:
      - mysql-application